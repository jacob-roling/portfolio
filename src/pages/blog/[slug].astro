---
import Base from "#layouts/Base.astro";
import Breadcrumb from "#components/Breadcrumb.astro";
import TOC from "#components/TOC.astro";
import { dayFormatter, slugify, sortedAndFilteredArticles } from "#utils";
import { Icon } from "astro-icon/components";

export async function getStaticPaths() {
  const articles = await sortedAndFilteredArticles();

  return articles.map((post) => ({
    params: {
      slug: post.slug,
    },
    props: post,
  }));
}

const {
  slug,
  data: { title, description, datePublished, tags },
} = Astro.props;

const { Content, headings } = await Astro.props.render();
---

<Base>
  <Fragment slot="head">
    <title>{`${title} â€” Jacob Roling`}</title>
    <meta name="description" content={description} />
  </Fragment>

  <main id="main" class="container" data-controller="toc">
    <div class="relative items-start lg:flex">
      <div
        data-controller="disclosure"
        class="pt-header lg:top-header mb-8 lg:sticky lg:order-last lg:pl-8"
      >
        <button
          data-disclosure-target="summary"
          class="peer button outlined group lg:hidden"
          aria-expanded="false"
        >
          On this page
          <Icon
            name="heroicons:chevron-right"
            class="transition-transform group-aria-expanded:rotate-90"
            aria-hidden="true"
          />
        </button>
        <p
          class="text-neutral-text-high-contrast hidden font-semibold lg:inline"
        >
          On this page
        </p>
        <TOC
          data-disclosure-target="details"
          class="mt-4 hidden border-b pb-4 peer-aria-expanded:block lg:block lg:border-b-0 lg:pb-0"
          headings={headings.filter((heading) => heading.depth < 3)}
        />
      </div>
      <div
        data-toc-target="content"
        class="typography lg:pt-header lg:border-r lg:pr-8"
      >
        <Breadcrumb />
        <h1>{title}</h1>
        <p>
          Published <time datetime={datePublished.toISOString()}
            >{dayFormatter.format(datePublished)}</time
          >. Tagged: <Fragment
            set:html={tags
              .map(
                (tag) =>
                  `<a href="/blog/tag/${slugify(tag)}/page/1">${tag}</a>`,
              )
              .join(", ")}
          />.
        </p>
        <Content />
        <!-- <article>
          <h2 id="comments">Comments</h2>
          <h3>Leave a Comment</h3>
          <div id="comments-list"></div>
          <a id="login" href={`https://github.com/login/oauth/authorize?${new URLSearchParams({
            client_id: import.meta.env.GITHUB_CLIENT_ID,
            state: Astro.url.href
          })}`}>Login with GitHub</a>
        </article> -->
        <!-- <script src="https://utteranc.es/client.js"
            repo="jacob-roling/portfolio"
            issue-term="pathname"
            theme="preferred-color-scheme"
            crossorigin="anonymous"
            async>
        </script> -->
      </div>
    </div>
  </main>
</Base>
