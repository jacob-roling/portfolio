---
import Base from "#layouts/Base.astro";
import Breadcrumb from "#components/Breadcrumb.astro";
import TOC from "#components/TOC.astro";
import { dayFormatter, slugify, sortedAndFilteredArticles } from "#utils";
import { Icon } from "astro-icon/components";

export async function getStaticPaths({ paginate }) {
  const articles = await sortedAndFilteredArticles();

  return articles.map((post) => ({
    params: {
      slug: post.slug,
    },
    props: post,
  }));
}

const {
  slug,
  data: { title, description, datePublished, tags },
} = Astro.props;

const { Content, headings } = await Astro.props.render();
---

<Base>
  <Fragment slot="head">
    <title>{`${title} â€” Jacob Roling`}</title>
    <meta name="description" content={description} />
  </Fragment>

  <div class="container">
    <main id="main" class="lg:flex items-start relative">
      <aside data-controller="disclosure" class="pt-header mb-8 lg:pl-8 lg:order-last lg:sticky lg:top-header">
        <button data-disclosure-target="button" class="lg:hidden peer button outlined group" aria-expanded="false">
          On this page
          <Icon name="heroicons:chevron-right" class="group-aria-expanded:hidden" aria-hidden="true" />
          <Icon name="heroicons:chevron-down" class="hidden group-aria-expanded:block" aria-hidden="true" />
        </button>
        <p class="hidden md:inline text-neutral-text-high-contrast font-semibold">On this page</p>
        <TOC data-disclosure-target="panel" class="mt-4 hidden peer-aria-expanded:block lg:block [&_.button]:w-full pb-4 border-b lg:pb-0 lg:border-b-0" headings={headings.filter(heading => heading.depth < 3)} />
      </aside>
      <div class="typography lg:pt-header lg:border-r lg:pr-8 ">
        <Breadcrumb />
        <h1>{title}</h1>
        <p>Published <time datetime={datePublished.toISOString()}>{dayFormatter.format(datePublished)}</time>. Tagged: <Fragment set:html={tags.map(tag => `<a href="/blog/tag/${slugify(tag)}/page/1">${tag}</a>`).join(", ")} />.</p>
        <Content />
        <!-- <article>
          <h2 id="comments">Comments</h2>
          <h3>Leave a Comment</h3>
          <div id="comments-list"></div>
          <a id="login" href={`https://github.com/login/oauth/authorize?${new URLSearchParams({
            client_id: import.meta.env.GITHUB_CLIENT_ID,
            state: Astro.url.href
          })}`}>Login with GitHub</a>
        </article> -->
        <!-- <script src="https://utteranc.es/client.js"
            repo="jacob-roling/portfolio"
            issue-term="pathname"
            theme="preferred-color-scheme"
            crossorigin="anonymous"
            async>
        </script> -->
      </div>
    </main>
  </div>
</Base>
